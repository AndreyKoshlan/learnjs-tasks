'use strict';

// С использованием цикла
function sumTo1(n) {
	let sum = 0;
	for (let i = n; i >= 1; i--) {
		sum += i;
	}
	return sum;
}

// Через рекурсию, т.к. sumTo(n) = n + sumTo(n-1) for n > 1
function sumTo2(n) {
	return n > 1 ? n + sumTo2(n-1) : 1;
}

// С использованием формулы арифметической прогрессии
function sumTo3(n) {
	return n * (n + 1) / 2;
}

console.log( sumTo1(100) ); // С использованием цикла
console.log( sumTo2(100) ); // Через рекурсию, т.к. sumTo(n) = n + sumTo(n-1) for n > 1
console.log( sumTo3(100) ); // С использованием формулы арифметической прогрессии

/* 
	Самый быстрый алгоритм с использованием формулы арифметической прогрессии, т.к.
	используется меньше всего операций с помощью только одной итерации. Самый долгий - рекурсивный.
	Рекурсивные алгоритмы работают медленнее чем их циклические аналоги.

	При помощи рекурсии может не получиться посчитать sumTo(100000). Возможно переполнение стека и вывод
	ошибки "Maximum call stack size exceeded".
*/